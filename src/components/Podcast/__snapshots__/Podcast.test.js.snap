// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test Podcast Component should render correctly 1`] = `
<BrowserRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Podcast
      location={
        Object {
          "state": Object {
            "rss": "link",
          },
        }
      }
    >
      <styled.div>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-ifAKCX",
                "isStatic": false,
                "lastClassName": "btUORl",
                "rules": Array [
                  "
  display: grid;
  width: 100%
  margin-top: 30px;
  justify-items: center;
  grid-gap: 15px;
  grid-template-columns: auto;
  grid-template-rows: auto;
  grid-template-areas:
    \\"podcast-img podcast-title\\"
    \\"podcast-img podcast-description\\"
    \\"episodes episodes\\";

  @media(max-width: 600px) {
    grid-template-areas:
    \\"podcast-img\\"
    \\"podcast-title\\"
    \\"podcast-description\\"
    \\"episodes\\";
  }
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-ifAKCX",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <div
            className="sc-ifAKCX btUORl"
          >
            <styled.img
              alt="podcast cover"
              src="link"
            >
              <StyledComponent
                alt="podcast cover"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-EHOje",
                      "isStatic": false,
                      "lastClassName": "fzjAuQ",
                      "rules": Array [
                        "
  grid-area: podcast-img;
  margin-left: 10px;
  width: 300px;
  height: 300px;
  object-fit: scale-down;

  @media (max-width: 600px) {
    margin: 0;
    max-width: 65%;
    max-height: 65%;
  }
",
                      ],
                    },
                    "displayName": "styled.img",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-EHOje",
                    "target": "img",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                src="link"
              >
                <img
                  alt="podcast cover"
                  className="sc-EHOje fzjAuQ"
                  src="link"
                />
              </StyledComponent>
            </styled.img>
            <styled.h2>
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-bZQynM",
                      "isStatic": false,
                      "lastClassName": "cqOIDJ",
                      "rules": Array [
                        "
  grid-area: podcast-title;
  margin: 0;
  margin-left: 10px;
  margin-right: 10px;
  @media (max-width: 600px) {
    text-align: center;
  }
",
                      ],
                    },
                    "displayName": "styled.h2",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-bZQynM",
                    "target": "h2",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <h2
                  className="sc-bZQynM cqOIDJ"
                >
                  podcastName
                </h2>
              </StyledComponent>
            </styled.h2>
            <styled.p>
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-gzVnrw",
                      "isStatic": false,
                      "lastClassName": "lioRCl",
                      "rules": Array [
                        "
  grid-area: podcast-description;
  max-width: 700px;
  white-space: pre-line;

  @media (max-width: 600px) {
    margin-left: 10px;
    margin-right: 10px;
  }
",
                      ],
                    },
                    "displayName": "styled.p",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-gzVnrw",
                    "target": "p",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <p
                  className="sc-gzVnrw lioRCl"
                >
                  podcastDescription
                </p>
              </StyledComponent>
            </styled.p>
            <EpisodesList
              episodes={
                Array [
                  Object {
                    "description": "description1",
                    "id": 1,
                    "image": "image1",
                    "name": "episode1",
                  },
                  Object {
                    "description": "description2",
                    "id": 2,
                    "image": "image2",
                    "name": "episode2",
                  },
                  Object {
                    "description": "description3",
                    "id": 3,
                    "image": "image3",
                    "name": "episode3",
                  },
                ]
              }
            >
              <styled.ul>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-bxivhb",
                        "isStatic": false,
                        "lastClassName": "BYhtZ",
                        "rules": Array [
                          "
  margin: 0;
  padding: 0;
  max-width: 700px;
  grid-area: episodes;
  list-style-type: none;
  display: grid;
  justify-items: center;
  align-items: center;
",
                        ],
                      },
                      "displayName": "styled.ul",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-bxivhb",
                      "target": "ul",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <ul
                    className="sc-bxivhb BYhtZ"
                  >
                    <Episode
                      description="description1"
                      image="image1"
                      key="1"
                      name="episode1"
                    >
                      <styled.li>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bdVaJa",
                                "isStatic": false,
                                "lastClassName": "jFctTN",
                                "rules": Array [
                                  "
  width: 100%;
  margin-top: 10px;
  margin-bottom: 10px;
  display: grid;
  grid-gap: 15px;
  grid-template-areas: \\"episode-image episode-link\\";
  justify-items: center;
  align-items: center;
  grid-template-columns: 200px auto;

  @media (max-width: 600px) {
    margin-top: 50px;
    margin-bottom: 50px;
    grid-template-columns: auto;
    grid-template-areas:
      \\"episode-image\\"
      \\"episode-link\\";
  }
",
                                ],
                              },
                              "displayName": "styled.li",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bdVaJa",
                              "target": "li",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <li
                            className="sc-bdVaJa jFctTN"
                          >
                            <styled.img
                              alt="episode cover"
                              src="image1"
                            >
                              <StyledComponent
                                alt="episode cover"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-bwzfXH",
                                      "isStatic": false,
                                      "lastClassName": "fGaqLM",
                                      "rules": Array [
                                        "
  grid-area: episode-image;
  width: 200px;
  height: 200px;
  object-fit: scale-down;
",
                                      ],
                                    },
                                    "displayName": "styled.img",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-bwzfXH",
                                    "target": "img",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                src="image1"
                              >
                                <img
                                  alt="episode cover"
                                  className="sc-bwzfXH fGaqLM"
                                  src="image1"
                                />
                              </StyledComponent>
                            </styled.img>
                            <styled.div>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-htpNat",
                                      "isStatic": false,
                                      "lastClassName": "cExcVD",
                                      "rules": Array [
                                        "
  max-width: 700px;
  grid-area: episode-link;

  @media (max-width: 600px) {
    margin-left: 10px;
    margin-right: 10px;
    text-align: center;
  }
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-htpNat",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="sc-htpNat cExcVD"
                                >
                                  <Link
                                    to={
                                      Object {
                                        "pathname": "/episode-player",
                                        "state": Object {
                                          "audio": undefined,
                                          "description": "description1",
                                          "image": "image1",
                                          "name": "episode1",
                                        },
                                      }
                                    }
                                  >
                                    <LinkAnchor
                                      href="/episode-player"
                                      navigate={[Function]}
                                    >
                                      <a
                                        href="/episode-player"
                                        onClick={[Function]}
                                      >
                                        episode1
                                      </a>
                                    </LinkAnchor>
                                  </Link>
                                </div>
                              </StyledComponent>
                            </styled.div>
                          </li>
                        </StyledComponent>
                      </styled.li>
                    </Episode>
                    <Episode
                      description="description2"
                      image="image2"
                      key="2"
                      name="episode2"
                    >
                      <styled.li>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bdVaJa",
                                "isStatic": false,
                                "lastClassName": "jFctTN",
                                "rules": Array [
                                  "
  width: 100%;
  margin-top: 10px;
  margin-bottom: 10px;
  display: grid;
  grid-gap: 15px;
  grid-template-areas: \\"episode-image episode-link\\";
  justify-items: center;
  align-items: center;
  grid-template-columns: 200px auto;

  @media (max-width: 600px) {
    margin-top: 50px;
    margin-bottom: 50px;
    grid-template-columns: auto;
    grid-template-areas:
      \\"episode-image\\"
      \\"episode-link\\";
  }
",
                                ],
                              },
                              "displayName": "styled.li",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bdVaJa",
                              "target": "li",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <li
                            className="sc-bdVaJa jFctTN"
                          >
                            <styled.img
                              alt="episode cover"
                              src="image2"
                            >
                              <StyledComponent
                                alt="episode cover"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-bwzfXH",
                                      "isStatic": false,
                                      "lastClassName": "fGaqLM",
                                      "rules": Array [
                                        "
  grid-area: episode-image;
  width: 200px;
  height: 200px;
  object-fit: scale-down;
",
                                      ],
                                    },
                                    "displayName": "styled.img",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-bwzfXH",
                                    "target": "img",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                src="image2"
                              >
                                <img
                                  alt="episode cover"
                                  className="sc-bwzfXH fGaqLM"
                                  src="image2"
                                />
                              </StyledComponent>
                            </styled.img>
                            <styled.div>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-htpNat",
                                      "isStatic": false,
                                      "lastClassName": "cExcVD",
                                      "rules": Array [
                                        "
  max-width: 700px;
  grid-area: episode-link;

  @media (max-width: 600px) {
    margin-left: 10px;
    margin-right: 10px;
    text-align: center;
  }
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-htpNat",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="sc-htpNat cExcVD"
                                >
                                  <Link
                                    to={
                                      Object {
                                        "pathname": "/episode-player",
                                        "state": Object {
                                          "audio": undefined,
                                          "description": "description2",
                                          "image": "image2",
                                          "name": "episode2",
                                        },
                                      }
                                    }
                                  >
                                    <LinkAnchor
                                      href="/episode-player"
                                      navigate={[Function]}
                                    >
                                      <a
                                        href="/episode-player"
                                        onClick={[Function]}
                                      >
                                        episode2
                                      </a>
                                    </LinkAnchor>
                                  </Link>
                                </div>
                              </StyledComponent>
                            </styled.div>
                          </li>
                        </StyledComponent>
                      </styled.li>
                    </Episode>
                    <Episode
                      description="description3"
                      image="image3"
                      key="3"
                      name="episode3"
                    >
                      <styled.li>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bdVaJa",
                                "isStatic": false,
                                "lastClassName": "jFctTN",
                                "rules": Array [
                                  "
  width: 100%;
  margin-top: 10px;
  margin-bottom: 10px;
  display: grid;
  grid-gap: 15px;
  grid-template-areas: \\"episode-image episode-link\\";
  justify-items: center;
  align-items: center;
  grid-template-columns: 200px auto;

  @media (max-width: 600px) {
    margin-top: 50px;
    margin-bottom: 50px;
    grid-template-columns: auto;
    grid-template-areas:
      \\"episode-image\\"
      \\"episode-link\\";
  }
",
                                ],
                              },
                              "displayName": "styled.li",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bdVaJa",
                              "target": "li",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <li
                            className="sc-bdVaJa jFctTN"
                          >
                            <styled.img
                              alt="episode cover"
                              src="image3"
                            >
                              <StyledComponent
                                alt="episode cover"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-bwzfXH",
                                      "isStatic": false,
                                      "lastClassName": "fGaqLM",
                                      "rules": Array [
                                        "
  grid-area: episode-image;
  width: 200px;
  height: 200px;
  object-fit: scale-down;
",
                                      ],
                                    },
                                    "displayName": "styled.img",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-bwzfXH",
                                    "target": "img",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                src="image3"
                              >
                                <img
                                  alt="episode cover"
                                  className="sc-bwzfXH fGaqLM"
                                  src="image3"
                                />
                              </StyledComponent>
                            </styled.img>
                            <styled.div>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-htpNat",
                                      "isStatic": false,
                                      "lastClassName": "cExcVD",
                                      "rules": Array [
                                        "
  max-width: 700px;
  grid-area: episode-link;

  @media (max-width: 600px) {
    margin-left: 10px;
    margin-right: 10px;
    text-align: center;
  }
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-htpNat",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="sc-htpNat cExcVD"
                                >
                                  <Link
                                    to={
                                      Object {
                                        "pathname": "/episode-player",
                                        "state": Object {
                                          "audio": undefined,
                                          "description": "description3",
                                          "image": "image3",
                                          "name": "episode3",
                                        },
                                      }
                                    }
                                  >
                                    <LinkAnchor
                                      href="/episode-player"
                                      navigate={[Function]}
                                    >
                                      <a
                                        href="/episode-player"
                                        onClick={[Function]}
                                      >
                                        episode3
                                      </a>
                                    </LinkAnchor>
                                  </Link>
                                </div>
                              </StyledComponent>
                            </styled.div>
                          </li>
                        </StyledComponent>
                      </styled.li>
                    </Episode>
                  </ul>
                </StyledComponent>
              </styled.ul>
            </EpisodesList>
          </div>
        </StyledComponent>
      </styled.div>
    </Podcast>
  </Router>
</BrowserRouter>
`;
